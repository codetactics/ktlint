plugins {
  id 'org.jetbrains.kotlin.jvm'
  id 'ktlint-publication'
}

configurations {
  ktlint
}

dependencies {
  compileOnly project(':ktlint-core')
  compileOnly deps.kotlin.stdlib

  testImplementation project(':ktlint-core')
  testImplementation project(':ktlint-test')
  testImplementation deps.kotlin.stdlib
  testImplementation deps.assertj
  testImplementation('org.jetbrains.spek:spek-junit-platform-engine:1.1.5') {
    exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib'
    exclude group: 'org.jetbrains.kotlin', module: 'kotlin-reflect'
  }
  testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.1.0'
  testImplementation 'org.junit.jupiter:junit-jupiter-api:5.1.0'

  ktlint project(':ktlint')
}

test {
  useJUnitPlatform()
}

task ktlint(type: JavaExec, dependsOn: classes) {
  main = 'com.pinterest.ktlint.Main'
  // adding compiled classes to the classpath so that ktlint would validate project's sources
  // using its own ruleset (in other words to dogfood)
  classpath = configurations.ktlint + sourceSets.main.output
  args '--debug', 'src/**/*.kt'
}

check.dependsOn ktlint
